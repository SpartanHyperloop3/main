import time
import matplotlib.pyplot as plt
import random
from drawnow import *

#dummy sensor data
sensor_data_raw = {
    'position' : [[2.3, 2.4, 2.6, 2.7, 2.8, 2.9, 3.0, 3.1, 3.3, 3.4, 3.5, 3.7, 3.8, 3.9, 3.3, 3.4, 3.5, 3.7, 3.8, 3.9,
                   2.3, 2.4, 2.6, 2.7, 2.8, 2.9, 3.0, 3.1, 3.3, 3.4, 3.5, 3.7, 3.8, 3.9, 3.3, 3.4, 3.5, 3.7, 3.8, 3.9,
                   2.3, 2.4, 2.6, 2.7, 2.8, 2.9, 3.0, 3.1, 3.3, 3.4, 3.5, 3.7, 3.8, 3.9, 3.3, 3.4, 3.5, 3.7, 3.8, 3.9],
                  [4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5.0, 5.1, 5.2, 5.3,
                   5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6, 6.7, 6.8, 6.9, 7.0, 7.1, 7.2, 7.3,
                   7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8.0, 8.1, 8.2, 8.3, 8.4, 8.5, 8.6, 8.7, 8.8, 8.9, 9.0, 9.1, 9.2, 9.3,
                   9.4, 9.5, 9.6, 9.7, 9.8, 9.9]],
    'velocity' : [[3.7, 3.7, 3.8, 3.8, 3.7, 3.7, 3.7, 3.7, 3.8, 3.8, 3.7, 3.8, 3.7, 3.9, 3.8, 3.8, 3.7, 3.8, 3.7, 3.9,
                   3.7, 3.7, 3.8, 3.8, 3.7, 3.7, 3.7, 3.7, 3.8, 3.8, 3.7, 3.8, 3.7, 3.9, 3.8, 3.8, 3.7, 3.8, 3.7, 3.9,
                   3.7, 3.7, 3.8, 3.8, 3.7, 3.7, 3.7, 3.7, 3.8, 3.8, 3.7, 3.8, 3.7, 3.9, 3.8, 3.8, 3.7, 3.8, 3.7, 3.9],
                  [4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5.0, 5.1, 5.2, 5.3,
                   5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6, 6.7, 6.8, 6.9, 7.0, 7.1, 7.2, 7.3,
                   7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8.0, 8.1, 8.2, 8.3, 8.4, 8.5, 8.6, 8.7, 8.8, 8.9, 9.0, 9.1, 9.2, 9.3,
                   9.4, 9.5, 9.6, 9.7, 9.8, 9.9]],
    'proximity 1' : [[7, 8, 7, 7, 8, 7, 8, 8, 8, 8, 9, 8, 7, 8, 8, 8, 9, 8, 7, 8,
                      7, 8, 7, 7, 8, 7, 8, 8, 8, 8, 9, 8, 7, 8, 8, 8, 9, 8, 7, 8,
                      7, 8, 7, 7, 8, 7, 8, 8, 8, 8, 9, 8, 7, 8, 8, 8, 9, 8, 7, 8],
                     [4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5.0, 5.1, 5.2,
                      5.3, 5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6, 6.7, 6.8, 6.9, 7.0, 7.1,
                      7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8.0, 8.1, 8.2, 8.3, 8.4, 8.5, 8.6, 8.7, 8.8, 8.9, 9.0,
                      9.1, 9.2, 9.3, 9.4, 9.5, 9.6, 9.7, 9.8, 9.9]],
    'proximity 2' : [[8, 8, 8, 7, 7, 9, 6, 7, 7, 8, 8, 7, 9, 8, 7, 8, 8, 7, 9, 8,
                      8, 8, 8, 7, 7, 9, 6, 7, 7, 8, 8, 7, 9, 8, 7, 8, 8, 7, 9, 8,
                      8, 8, 8, 7, 7, 9, 6, 7, 7, 8, 8, 7, 9, 8, 7, 8, 8, 7, 9, 8],
                     [4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5.0, 5.1, 5.2,
                      5.3, 5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6, 6.7, 6.8, 6.9, 7.0, 7.1,
                      7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8.0, 8.1, 8.2, 8.3, 8.4, 8.5, 8.6, 8.7, 8.8, 8.9, 9.0,
                      9.1, 9.2, 9.3, 9.4, 9.5, 9.6, 9.7, 9.8, 9.9]],
    'temperature 1' : [[40, 40, 40, 40, 40, 40, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                        40, 40, 40, 40, 40, 40, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                        40, 40, 40, 40, 40, 40, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42],
                       [4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5.0, 5.1, 5.2,
                        5.3, 5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6, 6.7, 6.8, 6.9, 7.0, 7.1,
                        7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8.0, 8.1, 8.2, 8.3, 8.4, 8.5, 8.6, 8.7, 8.8, 8.9, 9.0,
                        9.1, 9.2, 9.3, 9.4, 9.5, 9.6, 9.7, 9.8, 9.9]],
    'temperature 2': [[43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
                       43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
                       43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44],
                      [4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5.0, 5.1, 5.2,
                       5.3, 5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6, 6.7, 6.8, 6.9, 7.0, 7.1,
                       7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8.0, 8.1, 8.2, 8.3, 8.4, 8.5, 8.6, 8.7, 8.8, 8.9, 9.0,
                       9.1, 9.2, 9.3, 9.4, 9.5, 9.6, 9.7, 9.8, 9.9]],
}

sensor_data = {}
index = 0
index_leap = 5
plot_length = 20
total_length = 60

plot_layout = {
    'position' : 221,
    'velocity' : 223,
    'proximity 1' : 243,
    'proximity 2' : 247,
    'temperature 1' : 244,
    'temperature 2' : 248
}

def index_update():
    global index
    for key in plot_layout:
        sensor_data[key] = [sensor_data_raw[key][0][index:index+plot_length],
                            sensor_data_raw[key][1][index:index+plot_length]]
    index += index_leap

def plotting():
    for key in plot_layout:
        plt.title(key)
        plt.subplot(plot_layout[key])
        plt.plot(sensor_data[key][1], sensor_data[key][0])
        plt.draw()

for n in range(0,round(total_length/index_leap)):
    print('index start')
    index_start = time.time()
    index_update()
    index_end = time.time()
    print('index: %.5f' % (index_end - index_start))
    plot_start = time.time()
    #drawnow(plotting)
    plotting()
    plot_end = time.time()
    print('plot: %.5f' % (plot_end - plot_start))
    time.sleep(.5)

'''
def makePlot():
    plt.subplot(231)
    plt.plot(x[0],'r')
    plt.title('Live Streaming Sensor Data: Temperature')
    plt.grid(True)
    plt.ylabel('Temp C')
    plt.xlabel('Time')
    plt.subplot(231)
    plt.plot(x[1],'g')
    plt.title('Pressure')
    plt.grid(True)
    plt.ylabel('Pressure psi')
    plt.xlabel('Time')
    plt.subplot(231)
    plt.plot(x[2],'b')
    plt.title('Velocity')
    plt.grid(True)
    plt.ylabel('Velocity m/s')
    plt.xlabel('Time')
    plt.subplot(414)
    plt.plot(x[3],'c')
    plt.title('Distance')
    plt.grid(True)
    plt.ylabel('Distance m')
    plt.xlabel('Time')
    #wm = plt.get_current_fig_manager()
    #wm.window.state('zoomed')

for i in range(0,100):  #time
    time.sleep(0.001)
    for s in range(0,sensors):
        x[s].append(random.randint(20,80))

    for i in range(4):
        if len(x[i]) > 11:
            x[i].pop(0)
    #if len(x[s]) > 10:
        #x[s].pop(0)
    drawnow(makePlot)
'''
